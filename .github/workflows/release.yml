name: Release workflow
run-name: Release workflow
permissions:
  actions: write
  contents: write
  issues: write
  pull-requests: write
on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main
jobs:
  release:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Release generation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref_name == 'main' && github.event_name == 'push'
        run: |
          npm install -g semantic-release
          npx semantic-release --debug
      - name: Pre-release branch generation and manual workflow execution
        env:
          pr_number: ${{ github.event.number }}
          head_ref: ${{ github.head_ref }}
          tmp_branch: tmp-PR${{ github.event.number }}-${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [ -n "$(git ls-remote --heads origin "${tmp_branch}")" ]
          then
            git checkout "${tmp_branch}"
          else
            git checkout "${head_ref}"
            git checkout -b "${tmp_branch}"
          fi
          git merge origin/main
          git push origin "${tmp_branch}" -u
          gh workflow run prerelease.yml --ref "${tmp_branch}" -f pr_number="${pr_number}"
      - name: Temporal-branch deletion
        if: github.event.action == 'closed' && github.event_name == 'pull_request' && github.event.pull_request.merged == true
        env:
          ref_name: ${{ github.ref_name }}
        uses: actions/github-script@v6
        with:
          retries: 3
          script: |
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${process.env.ref_name}`
            })
        
          





